<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by perltidy on Thu Nov 30 18:10:54 2006 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2006 Perl Advent Calendar: Putting Tinsel on the Tree</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body>
<h1><a href="../">Perl Advent Calendar 2006-12</a>-11</h1>
<h2 align="center">Putting Tinsel on the Tree</h2>
<h3 align="center">by Bill Ricker</h3>

<p>Lincoln Stein's <tt><a href="http://perladvent.pm.org/2000/">GD</a></tt>
provides everything you need to draw simple geometric shapes for web graphics.
The <tt>GD</tt> API is very verbose though, so he created a simplified version:
GD::Simple. A key feature of <tt>GD::Simple</tt> is the ability to specify
colors by name as well as by RGB triple-<tt>int</tt>s. However, if you want 
to attempt pseudo-metallic tones in the flat colors available, the default
<tt>'gold'</tt> and <tt>'silver'</tt> aren't enough. But of course CPAN comes
to the rescue with
<tt><a href="http://search.cpan.org/search?module=Graphics::ColorNames">Graphics::ColorNames</a></tt>,
which provides names to tuple mapping for use with GD or any other packages.
It provides Netscape/Mozilla, X-windows, and several other RGB name
tables.</p>

<p>In addition to demonstrating use of <tt>ColorNames</tt>, our sammple
includes an example of how to make your own color namespace. I created
<tt><a href="#package-Graphics::ColorNames::Metallic">Graphics::ColorNames::Metallic.pm</a></tt>
to provide a range of golden hues, plus copper and a "cooler" (bluer) silver
than the gray <tt>'silver'</span> offered by existing tables.</p>

<pre>$ perl mod11.pl &gt; tree.png<span class="c">
Center @ 240 400 at tree.pl line 29, &lt;DATA&gt; line 191.</span></pre>

<center><img src="tree.png" height="480" width="480" alt="Xmas tree"></center>

<p>Well, the balls look a little <b>too</b> random compared to a real tree
&mdash; randomness clusters more than is acceptable in a nice arrangement.
At least there's something I do better in real-life than on-line! The tinsel
doesn't look half shabby, though.</p>

<p>An interesting interface to <tt>Graphics::ColorNames</tt> is provided by
<tt><a href="http://search.cpan.org/search?query=Acme::Autocolor">Acme::AutoColor</a></tt>.
In spite of its home in the <tt>Acme::*</tt> namespace, it could prove useful.
Through the magic of <tt>AUTOLOAD</tt>, the module allows one access to
colornamed subroutines like <tt>RED()</tt>, <tt>GREEN()</tt> and
<tt>GOLD()</tt> or any others offered in a <tt>Graphics::ColorNames</tt> table.
(It's actually case-insensitive, but since you'd be using
them as constants you'd make them UPPERCASE, right?)</p>

<h1><a href="mod11.pl">mod11.pl</a> - Painting a Happy Tree<sup><a href="http://www.bobross.com/">*</sup></a></h1>
<hr />

<pre>
   1 #!perl -w
   2 <span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>
   3 <span class="k">use</span> <span class="w">warnings</span><span class="sc">;</span>
   4 
   5 <span class="c"># Xmas tree PNG on stdout</span>
   6 <span class="k">use</span> <span class="w">GD::Simple</span><span class="sc">;</span>
   7 
   8 <span class="c"># create a new image</span>
   9 <span class="k">my</span> <span class="s">(</span><span class="i">$imgWide</span><span class="cm">,</span> <span class="i">$imgTall</span><span class="s">)</span> = <span class="s">(</span><span class="n">480</span><span class="cm">,</span> <span class="n">480</span><span class="s">)</span><span class="sc">;</span>
  10 <span class="k">my</span> <span class="i">$img</span> = <span class="w">GD::Simple</span><span class="w">-&gt;new</span><span class="s">(</span><span class="i">$imgWide</span><span class="cm">,</span> <span class="i">$imgTall</span><span class="s">)</span><span class="sc">;</span>
  11 
  12 <span class="c"># my Custom metallics</span>
  13 <span class="k">use</span> <span class="w">Graphics::ColorNames</span> <span class="q">qw(hex2tuple)</span><span class="sc">;</span>
  14 <span class="k">tie</span> <span class="k">our</span> <span class="i">%colors</span><span class="cm">,</span> <span class="q">'Graphics::ColorNames'</span><span class="cm">,</span> <span class="q">'Metallic'</span><span class="sc">;</span>
  15 <span class="k">my</span> <span class="i">$gold</span>   = <span class="i">$img</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span><span class="w">hex2tuple</span> <span class="i">$colors</span>{<span class="w">gold3</span>}<span class="s">)</span><span class="sc">;</span>
  16 <span class="k">my</span> <span class="i">$silver</span> = <span class="i">$img</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span><span class="w">hex2tuple</span> <span class="i">$colors</span>{<span class="w">silver</span>}<span class="s">)</span><span class="sc">;</span>
  17 
  18 <span class="c"># Draw Border and background</span>
  19 <span class="i">$img</span><span class="i">-&gt;bgcolor</span><span class="s">(</span><span class="q">'lightblue'</span><span class="s">)</span><span class="sc">;</span>
  20 <span class="k">my</span> <span class="i">$border</span> = <span class="n">50</span><span class="sc">;</span>
  21 <span class="i">$img</span><span class="i">-&gt;fgcolor</span><span class="s">(</span><span class="i">$gold</span><span class="s">)</span><span class="sc">;</span>
  22 <span class="i">$img</span><span class="i">-&gt;penSize</span><span class="s">(</span><span class="i">$border</span><span class="cm">,</span> <span class="i">$border</span><span class="s">)</span><span class="sc">;</span>
  23 <span class="i">$img</span><span class="i">-&gt;rectangle</span><span class="s">(</span><span class="i">$border</span>/<span class="n">2</span><span class="cm">,</span> <span class="i">$border</span>/<span class="n">2</span><span class="cm">,</span> <span class="i">$imgWide</span>-<span class="i">$border</span>/<span class="n">2</span><span class="cm">,</span> <span class="i">$imgTall</span>-<span class="i">$border</span>/<span class="n">2</span><span class="s">)</span><span class="sc">;</span>
  24 
  25 
  26 <span class="c"># Tree is a triangle based at @Center</span>
  27 <span class="k">my</span> <span class="i">@Center</span>=<span class="s">(</span><span class="n">240</span><span class="cm">,</span> <span class="n">400</span><span class="s">)</span><span class="sc">;</span>
  28 <span class="k">warn</span> <span class="q">&quot;Center @ @Center&quot;</span><span class="sc">;</span>
  29 <span class="c"># but Draw trunk first, so it's under foliage</span>
  30 <span class="i">$img</span><span class="i">-&gt;fgcolor</span><span class="s">(</span><span class="k">undef</span><span class="s">)</span><span class="sc">;</span>
  31 <span class="i">$img</span><span class="i">-&gt;bgcolor</span><span class="s">(</span><span class="q">'brown'</span><span class="s">)</span><span class="sc">;</span>
  32 <span class="i">$img</span><span class="i">-&gt;rectangle</span><span class="s">(</span>
  33 		<span class="i">add2</span><span class="s">(</span><span class="i">@Center</span><span class="cm">,</span><span class="s">(</span><span class="n">-20</span><span class="cm">,</span> <span class="n">-30</span><span class="s">)</span><span class="s">)</span><span class="cm">,</span> 
  34 		<span class="i">add2</span><span class="s">(</span><span class="i">@Center</span><span class="cm">,</span><span class="s">(</span><span class="n">+20</span><span class="cm">,</span> <span class="n">+30</span><span class="s">)</span><span class="s">)</span><span class="cm">,</span>
  35 	       <span class="s">)</span><span class="sc">;</span>
  36 <span class="c"># Foliage</span>
  37 <span class="k">my</span> <span class="s">(</span><span class="i">$wt</span><span class="cm">,</span> <span class="i">$ht</span><span class="s">)</span>=<span class="s">(</span><span class="n">150</span><span class="cm">,</span> <span class="n">300</span><span class="s">)</span><span class="sc">;</span>                     <span class="c"># $wt = half width</span>
  38 <span class="k">my</span> <span class="i">@Top</span><span class="sc">;</span>
  39 <span class="k">my</span> <span class="i">$poly</span> = <span class="w">new</span> <span class="w">GD::Polygon</span><span class="sc">;</span>
  40 <span class="i">$poly</span><span class="i">-&gt;addPt</span><span class="s">(</span>     <span class="i">add2</span><span class="s">(</span><span class="i">@Center</span><span class="cm">,</span><span class="s">(</span>-<span class="i">$wt</span><span class="cm">,</span>   <span class="n">0</span><span class="s">)</span><span class="s">)</span><span class="s">)</span><span class="sc">;</span>
  41 <span class="i">$poly</span><span class="i">-&gt;addPt</span><span class="s">(</span>     <span class="i">add2</span><span class="s">(</span><span class="i">@Center</span><span class="cm">,</span><span class="s">(</span>+<span class="i">$wt</span><span class="cm">,</span>   <span class="n">0</span><span class="s">)</span><span class="s">)</span><span class="s">)</span><span class="sc">;</span>
  42 <span class="i">$poly</span><span class="i">-&gt;addPt</span><span class="s">(</span><span class="i">@Top</span>=<span class="i">add2</span><span class="s">(</span><span class="i">@Center</span><span class="cm">,</span><span class="s">(</span>   <span class="n">0</span><span class="cm">,</span>-<span class="i">$ht</span><span class="s">)</span><span class="s">)</span><span class="s">)</span><span class="sc">;</span> <span class="c"># y goes Down page :-(</span>
  43 <span class="i">$img</span><span class="i">-&gt;bgcolor</span><span class="s">(</span><span class="q">'green'</span><span class="s">)</span><span class="sc">;</span>                       <span class="c"># trees are green</span>
  44 <span class="i">$img</span><span class="i">-&gt;fgcolor</span><span class="s">(</span><span class="q">'green'</span><span class="s">)</span><span class="sc">;</span>
  45 <span class="i">$img</span><span class="i">-&gt;penSize</span><span class="s">(</span><span class="n">1</span><span class="cm">,</span> <span class="n">1</span><span class="s">)</span><span class="sc">;</span>
  46 <span class="i">$img</span><span class="i">-&gt;polygon</span><span class="s">(</span><span class="i">$poly</span><span class="s">)</span><span class="sc">;</span>                         <span class="c"># draw tree</span>
  47 
  48 <span class="k">my</span> <span class="i">@Balls</span>=<span class="s">(</span>
  49 	   <span class="q">'mediumblue'</span><span class="cm">,</span> <span class="q">'purple'</span><span class="cm">,</span> <span class="q">'crimson'</span><span class="cm">,</span> <span class="q">'darkorange'</span><span class="cm">,</span>
  50 	   <span class="i">$img</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span><span class="w">hex2tuple</span> <span class="i">$colors</span>{<span class="w">gold1</span>}<span class="s">)</span><span class="cm">,</span>
  51 	  <span class="s">)</span><span class="sc">;</span>
  52 
  53 <span class="c"># Always hang tinsel <b>last</b> on a real tree, </span>
  54 <span class="c"># but to make it fall &quot;behind&quot; balls, we draw it first.</span>
  55 <span class="i">HangTinsel</span><span class="s">(</span>  <span class="i">add2</span><span class="s">(</span><span class="i">@Center</span><span class="cm">,</span> <span class="i">randPoint</span><span class="s">(</span><span class="i">$wt</span><span class="cm">,</span> -<span class="i">$ht</span><span class="s">)</span><span class="s">)</span><span class="s">)</span> <span class="k">for</span> <span class="s">(</span><span class="n">1</span>..<span class="n">900</span><span class="s">)</span><span class="sc">;</span>
  56 
  57 <span class="c"># Hang a ball on the highest bough<sup><a href="#marbles">2</a></sup></span>
  58 <span class="i">HangBall</span><span class="s">(</span> <span class="n">4</span><span class="cm">,</span> <span class="i">@Top</span><span class="s">)</span><span class="sc">;</span>
  59 <span class="c"># Random balls</span>
  60 <span class="i">HangBall</span><span class="s">(</span><span class="i">$_</span><span class="cm">,</span> <span class="i">add2</span><span class="s">(</span><span class="i">@Center</span><span class="cm">,</span> <span class="i">randPoint</span><span class="s">(</span><span class="i">$wt</span><span class="cm">,</span> -<span class="i">$ht</span><span class="s">)</span><span class="s">)</span><span class="s">)</span>
  61   <span class="k">for</span><span class="s">(</span> <span class="n">1</span> .. <span class="s">(</span><span class="n">9</span> * <span class="k">scalar</span> <span class="i">@balls</span><span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
  62 
  63 <span class="c"># convert into png data</span>
  64 <span class="k">print</span> <span class="i">$img</span><span class="i">-&gt;png</span><span class="sc">;</span>
</pre>

<h2><a name="suba">Subroutines</a></h2>
<pre>
  70 <span class="c">#center a ball on X, Y</span>
<a name="HangBall-"></a>  71 <span class="k">sub </span><span class="m">HangBall</span><span class="s">{</span>                                 <span class="c"># number, X, Y</span>
  72         <span class="k">my</span> <span class="i">$n</span>=<span class="k">shift</span><span class="sc">;</span>                          <span class="c"># leave point in @_</span>
  73         <span class="k">my</span> <span class="i">$m</span> = <span class="k">scalar</span><span class="s">(</span><span class="i">@Balls</span><span class="s">)</span><span class="sc">;</span>
  74         <span class="k">my</span> <span class="s">(</span><span class="i">$c1</span><span class="cm">,</span><span class="i">$c2</span><span class="s">)</span>=<span class="s">(</span>
  75 		      <span class="i">$n</span> % <span class="i">$m</span><span class="cm">,</span>                <span class="c"># sequential through colors</span>
  76 		      <span class="k">rand</span><span class="s">(</span><span class="i">$m</span><span class="s">)</span><span class="cm">,</span>               <span class="c"># random border/shine</span>
  77 		     <span class="s">)</span><span class="sc">;</span>
  78         <span class="i">$img</span><span class="i">-&gt;bgcolor</span><span class="s">(</span><span class="i">$Balls</span>[<span class="i">$c1</span>]<span class="s">)</span><span class="sc">;</span>
  79         <span class="i">$img</span><span class="i">-&gt;fgcolor</span><span class="s">(</span><span class="i">$Balls</span>[<span class="i">$c2</span>]<span class="s">)</span><span class="sc">;</span>
  80         <span class="i">$img</span><span class="i">-&gt;penSize</span><span class="s">(</span><span class="n">1</span><span class="cm">,</span> <span class="n">1</span><span class="s">)</span><span class="sc">;</span>
  81         <span class="i">$img</span><span class="i">-&gt;moveTo</span><span class="s">(</span><span class="i">@_</span><span class="s">)</span><span class="sc">;</span>
  82         <span class="i">$img</span><span class="i">-&gt;ellipse</span><span class="s">(</span><span class="n">15</span><span class="cm">,</span> <span class="n">15</span><span class="s">)</span><span class="sc">;</span>                <span class="c"># circle is ellipse where a=b=r</span>
  83 <span class="s">}</span>
  84 
  85 <span class="c">#tinsel hangs from: X, Y</span>
<a name="HangTinsel-"></a>  86 <span class="k">sub </span><span class="m">HangTinsel</span><span class="s">{</span>
  87         <span class="i">$img</span><span class="i">-&gt;fgcolor</span><span class="s">(</span><span class="i">$silver</span><span class="s">)</span><span class="sc">;</span>
  88         <span class="i">$img</span><span class="i">-&gt;bgcolor</span><span class="s">(</span><span class="k">undef</span><span class="s">)</span><span class="sc">;</span>
  89         <span class="i">$img</span><span class="i">-&gt;penSize</span><span class="s">(</span><span class="n">2</span><span class="cm">,</span> <span class="n">2</span><span class="s">)</span><span class="sc">;</span>
  90         <span class="i">$img</span><span class="i">-&gt;angle</span><span class="s">(</span><span class="n">90</span><span class="s">)</span><span class="sc">;</span>
  91         <span class="i">$img</span><span class="i">-&gt;moveTo</span><span class="s">(</span><span class="i">@_</span><span class="s">)</span><span class="sc">;</span>
  92         <span class="i">$img</span><span class="i">-&gt;line</span><span class="s">(</span><span class="n">10</span><span class="s">)</span><span class="sc">;</span>
  93 <span class="s">}</span>
  94 
  95 
  96 <span class="c"># add points: (X,Y),(a,b)-&gt; (X+a, Y+b). </span>
  97 <span class="c"># Points can be passed as arrays, lists, or coordinates; Perl flattens free</span>
<a name="add2-"></a>  98 <span class="k">sub </span><span class="m">add2</span> <span class="s">{</span>
  99         <span class="k">warn</span> <span class="q">&quot;Useless use of add2() for points in scalar context&quot;</span> <span class="k">unless</span> <span class="k">wantarray</span><span class="sc">;</span> 
 100         <span class="k">my</span> <span class="s">(</span><span class="i">$x1</span><span class="cm">,</span> <span class="i">$y1</span><span class="cm">,</span> <span class="i">$x2</span><span class="cm">,</span> <span class="i">$y2</span><span class="s">)</span>=<span class="i">@_</span><span class="sc">;</span>
 101         <span class="k">my</span> <span class="i">$sum</span>=<span class="s">[</span><span class="s">(</span><span class="i">$x1</span>+<span class="i">$x2</span><span class="s">)</span><span class="cm">,</span> <span class="s">(</span><span class="i">$y1</span>+<span class="i">$y2</span><span class="s">)</span><span class="s">]</span><span class="sc">;</span>
 102         <span class="k">return</span> <span class="i">@</span>{<span class="i">$sum</span>}<span class="sc">;</span>
 103 <span class="s">}</span>
 104 
 105 <span class="c">#rnadom point within bounds: half-width, height</span>
<a name="randPoint-"></a> 106 <span class="k">sub </span><span class="m">randPoint</span><span class="s">{</span>
 107         <span class="c"># Pick a point in a rectangle</span>
 108         <span class="c"># with two random reals 0..1</span>
 109         <span class="c"># but transform into </span>
 110         <span class="c"># triangle, as they have the same</span>
 111         <span class="c"># area -</span>
 112         <span class="c">#    /\     ^   | |</span>
 113         <span class="c">#   /__\    h   |_|</span>
 114         <span class="c">#    ww  = 2*w   w </span>
 115         <span class="c"># before or after usual scaling 1*1 to w*h </span>
 116 
 117         <span class="k">my</span> <span class="s">(</span><span class="i">$wt</span><span class="cm">,</span> <span class="i">$ht</span><span class="s">)</span>=<span class="i">@_</span><span class="sc">;</span>
 118         <span class="k">my</span> <span class="s">(</span><span class="i">$x</span><span class="cm">,</span> <span class="i">$y</span><span class="s">)</span>=<span class="s">(</span><span class="k">rand</span><span class="s">(</span><span class="s">)</span><span class="cm">,</span> <span class="k">rand</span><span class="s">(</span><span class="s">)</span><span class="s">)</span><span class="sc">;</span>
 119         <span class="k">if</span><span class="s">(</span> <span class="s">(</span><span class="i">$x</span>+<span class="i">$y</span><span class="s">)</span> &gt; <span class="n">1</span> <span class="s">)</span><span class="s">{</span> 
 120                 <span class="c"># fold upper right half rectangle</span>
 121                 <span class="c"># to   lower right half triangle</span>
 122                 <span class="i">$x</span> = <span class="n">-1</span>*<span class="s">(</span><span class="n">1</span> - <span class="i">$x</span><span class="s">)</span><span class="sc">;</span>
 123                 <span class="i">$y</span> = <span class="n">1</span> - <span class="i">$y</span><span class="sc">;</span> 
 124         <span class="s">}</span>
 125         <span class="k">return</span> <span class="i">@</span>{<span class="s">[</span> <span class="i">$wt</span>*<span class="i">$x</span><span class="cm">,</span> <span class="i">$ht</span>*<span class="i">$y</span> <span class="s">]</span>}<span class="sc">;</span>
 126 <span class="s">}</span>
<a name="EOF"></a></pre>

<h1><a href="Metallic.pm">Metallic.pm</a></h1>

<hr />
<pre>
<a name="package-Graphics::ColorNames::Metallic"></a>   1 <span class="k">package </span><span class="i">Graphics::ColorNames::Metallic</span><span class="sc">;</span>
   2 <span class="c"># Custom Metallic table for Graphics::ColorName,</span>
   3 <span class="c"># from Graphics::ColorNames doc, with additions from X table.</span>
   4 
<a name="NamesRgbTable-"></a>   5 <span class="k">sub </span><span class="m">NamesRgbTable()</span> <span class="s">{</span>
   6 <span class="k">use</span> <span class="w">integer</span><span class="sc">;</span>
   7         <span class="k">return</span> <span class="s">{</span>
   8         <span class="w">copper</span> <span class="cm">=&gt;</span> <span class="n">0xb87333</span><span class="cm">,</span>
   9         <span class="w">silver</span> <span class="cm">=&gt;</span> <span class="n">0xe6e8fa</span><span class="cm">,</span> <span class="c"># others use C0C0C0 which is just light-grey :-(</span>
  10 
  11         <span class="w">gold</span>   <span class="cm">=&gt;</span> <span class="n">0xcd7f32</span><span class="cm">,</span>
  12         <span class="w">gold1</span>  <span class="cm">=&gt;</span> <span class="n">0xffd700</span><span class="cm">,</span> <span class="c"># X</span>
  13         <span class="w">gold2</span>  <span class="cm">=&gt;</span> <span class="n">0xeec900</span><span class="cm">,</span> <span class="c"># X</span>
  14         <span class="w">gold3</span>  <span class="cm">=&gt;</span> <span class="n">0xcdad00</span><span class="cm">,</span> <span class="c"># X</span>
  15         <span class="w">gold4</span>  <span class="cm">=&gt;</span> <span class="n">0x8b7500</span><span class="cm">,</span> <span class="c"># X</span>
  16         <span class="s">}</span><span class="sc">;</span>
  17 <span class="s">}</span>
  18 
  19  <span class="n">1</span><span class="sc">;</span>
<a name="-tree-"></a>
</pre>

<blockquote style="padding: 1em; border: 2px ridge black; background-color:#eee">
My <a name="marbles">apologies</a> to James Taylor and Judy Garland for
alluding to Sinatra's bowdlerization of everyone's
<a href="http://www.npr.org/programs/morning/features/2001/dec/james_taylor/011219.james_taylor.html">favorite
tune</a> from Xmas 1944 and 2001 in the code comments -- Bill
</blockquote>

</body>
</html>
