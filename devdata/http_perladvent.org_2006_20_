<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>2006 Perl Advent Calendar: Counting down the days...</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body>
<h1><a href="../">Perl Advent Calendar 2006-12</a>-20</h1>
<h2 align="center">Counting down the days&hellip;</h2>
<h3 align="center">by David Westbrook</h3>

<tt><a href="http://search.cpan.org/search?module=Date::Calc">Date::Calc</a></tt>
is a toolkit of over sixty date and time functions from simple date math to
Easter calculations. It can prove to be a nice, light-weight alternative to
<tt>DateTime</tt>, or the plethora of other
<a href="http://search.cpan.org/search?query=date&mode=all">Date</a>
modules out there. Implemented as a C library with XS wrapper
<tt>Date::Calc</tt> lives up to its motto of, "Keep it small, fast and simple";
there are no default exports. The module is "fun for everyone" and ships with
support for over a dozen languages.</P>

<H3>The wait is almost over&hellip;</H3>
<H4><A NAME="what month is it">What month is it?</A></H4>

<PRE>
<span class="k">use</span> <span class="w">Date::Calc</span> <span class="q">qw/Decode_Language Language Month_to_Text/</span><span class="sc">;</span>
<span class="k">foreach</span> <span class="k">my</span> <span class="i">$lang</span> <span class="s">(</span><span class="q">qw/English Fran&ccedil;ais Deutsch Espa&ntilde;ol Portugu&ecirc;s Nederlands</span>
                      <span class="q">Italiano Norsk Svenska Dansk suomi Magyar Polski/</span><span class="s">)</span><span class="s">{</span>
  <span class="i">Language</span><span class="s">( </span><span class="i">Decode_Language</span><span class="s">( </span><span class="i">$lang</span> <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
  <span class="k">printf</span> <span class="q">&quot;%10s: %s\n&quot;</span><span class="cm">,</span> <span class="i">$lang</span><span class="cm">,</span> <span class="i">Month_to_Text</span><span class="s">(</span> <span class="n">12</span> <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>
</PRE>

<H4><A NAME="when's christmas">When's Christmas?</A></H4>

<P>How much longer do we have to wait?!?</P>

<PRE>
<span class="k">use</span> <span class="w">Date::Calc</span> <span class="q">qw/Today Delta_Days/</span><span class="sc">;</span>
<span class="k">printf</span> <span class="q">&quot;Christmas is %d days away&quot;</span><span class="cm">,</span> <span class="i">Delta_Days</span><span class="s">(</span> <span class="i">Today</span><span class="s">(</span><span class="s">)</span><span class="cm">,</span> <span class="n">2006</span><span class="cm">,</span> <span class="n">12</span><span class="cm">,</span> <span class="n">25</span> <span class="s">)</span><span class="sc">;</span>
</PRE>

<P>What if it's after 2006-12-25? What about 'next' Christmas, no matter what the current year is?</P>

<PRE>
<span class="k">use</span> <span class="w">Date::Calc</span> <span class="q">qw/Today Delta_Days Add_Delta_YMD/</span><span class="sc">;</span>
<span class="k">my</span> <span class="i">@next_Christmas</span> = <span class="s">(</span> <span class="s">(</span><span class="i">Today</span><span class="s">)</span>[<span class="n">0</span>]<span class="cm">,</span> <span class="n">12</span><span class="cm">,</span> <span class="n">25</span> <span class="s">)</span><span class="sc">;</span>
<span class="k">if</span><span class="s">(</span> <span class="i">Delta_Days</span><span class="s">(</span> <span class="i">Today</span><span class="s">()</span><span class="cm">,</span> <span class="i">@next_Christmas</span> <span class="s">)</span> &lt <span class="n">0</span> <span class="s">)</span><span class="s">{</span>
  <span class="c"># in case we past this year's holiday already, e.g. it's 12/28</span>
  <span class="i">@next_Christmas</span> = <span class="i">Add_Delta_YMD</span><span class="s">(</span> <span class="i">@next_Christmas</span><span class="cm">,</span> <span class="n">1</span><span class="cm">,</span> <span class="n">0</span><span class="cm">,</span> <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>
<span class="k">printf</span> <span class="q">&quot;Christmas is %d days away&quot;</span><span class="cm">,</span> <span class="i">Delta_Days</span><span class="s">(</span> <span class="i">Today</span><span class="s">(</span><span class="s">)</span><span class="cm">,</span> <span class="i">@next_Christmas</span> <span class="s">)</span><span class="sc">;</span>
</PRE>

<H3><A NAME="fancy trimmings">Fancy Trimmings</A></H3>

In addition to providing functions for date calculation, like finding last
Monday:

<PRE>
$ perl -MDate::Calc=:all -e '<span class="k">printf</span> <span class="q">&quot;%04d%02d%02d&quot;</span><span class="cm">,</span> <span class="i">Monday_of_Week</span><span class="s">(</span> <span class="i">Week_of_Year</span><span class="s">(</span><span class="i">Today</span><span class="s">)</span> <span class="s">)</span>'
</PRE>

You can also verify that a date is well formed:

<PRE>
<span class="k">use</span> <span class="w">Date::Calc</span> <span class="q">qw/check_date/</span><span class="sc">;</span>
<span class="k">my</span> <span class="i">$s</span> = <span class="q">'2006-12-01'</span><span class="sc">;</span>
<span class="k">print</span> <span class="q">&quot;OK&quot;</span> <span class="k">if</span> <span class="i">check_date</span><span class="s">(</span> <span class="k">split</span><span class="s">(</span><span class="q">/-/</span><span class="cm">,</span><span class="i">$s</span><span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
</PRE>

And even produce a <tt>cal</tt> like calendar (single month mode only):

<PRE>
$ perl -MDate::Calc=:all -e '<span class="k">print</span> <span class="i">Calendar</span><span class="s">(</span> <span class="n">2006</span><span class="cm">,</span> <span class="n">12</span> <span class="s">)</span>'
<span class="c">
         December 2006
  Mon Tue Wed Thu Fri Sat Sun
                    1   2   3
    4   5   6   7   8   9  10
   11  12  13  14  15  16  17
   18  19  20  21  22  23  24
   25  26  27  28  29  30  31</PRE>


<H3>Tasty Recipes</H3>

<P>Better than fruitcake or mincemeat pie are the 17
<a href="http://search.cpan.org/~stbey/Date-Calc/Calc.pod#RECIPES">recipes</a>
included in the <tt>Date::Calc</tt> documentation, covering topics such as
printing dates as strings (e.g. 'Monday, December 25th, 2006'), checking
someone's age, finding a pay date, converting a MS Visual Basic "DATETIME"
value, and working with date ranges.</P>

</BODY>
</HTML>
