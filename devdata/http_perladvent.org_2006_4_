<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by perltidy on Sun Dec  3 23:23:11 2006 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2006 Perl Advent Calendar: Are you naughty or nice?</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body>
<H1><A HREF="../">Perl Advent Calendar 2006-12</A>-04</H1>
<H2 ALIGN="CENTER">Are you naughty or nice?</H2>
<H3 ALIGN="CENTER">by Jerrad Pierce</H3>
<p>
Like templating systems, many have tried to implement their own CGI query
processor. But the instant any such hack were to see the light of day, it'd
meet with cries of, "use <tt>CGI</tt>!" Often, besides ignorance, these
homegrown solutions stem from a desire to avoid the heft of <tt>CGI</tt>. What
if you don't need all of its bells and whistles? Perhaps you've decided to try
to get off of a certain someone's <em>Naughty</em> list and use something like
<tt><a href="http://search.cpan.org/search?module=HTML::Template">HTML::Template</a></tt>,
rendering all of <tt>CGI</tt>'s HTML generator methods dead wood. Well then,
you might just be interested in the svelte
<tt><a href="http://search.cpan.org/search?module=CGI::Minimal">CGI::Minimal</a></tt>.
Depending upon how you measure it Minimal is about
<sup>1</sup>/<sub>6</sub> the lines and <sup>1</sup>/<sub>9</sub> bytes of
<tt>CGI</tt>. The result, according to the (dated) benchmarks included in
the documentation, is a 4x speedup for conventional CGIs. And as our simple
sample <tt>cgiecho</tt> shows <sup><a href="#1">1</a></sup>, the module's
interface is familiar enough. So go ahead and check it out, what've you got
to lose?</p>

<h1><a href="mod4.pl">mod4.pl</a></h1>
<hr />
<pre>
   1 #Be sure to use -T and maybe <a href="../../2003/1st/">CGI::Untaint</a> if you do anything more substantial
   2 <span class="k">use</span> <span class="w">CGI::Minimal</span><span class="sc">;</span>
   3 <span class="k">use</span> <span class="w">Data::Dumper</span><span class="sc">;</span>
   4 
   5 <span class="k">my</span><span class="s">(</span><span class="i">$q</span><span class="cm">,</span> <span class="i">%p</span><span class="s">)</span><span class="sc">;</span>
   6 
   7 <span class="i">$q</span> = <span class="w">new</span> <span class="w">CGI::Minimal</span><span class="sc">;</span>
   8 <span class="i">$p</span>{<span class="i">$_</span>} = <span class="i">$q</span><span class="i">-&gt;param</span><span class="s">(</span><span class="i">$_</span><span class="s">)</span> <span class="k">foreach</span> <span class="i">$q</span><span class="i">-&gt;param</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
   9 
  10 <span class="k">print</span> <span class="q">&quot;Content-type: text/plain\n\n&quot;</span><span class="sc">;</span>
  11 
  12 <span class="i">$Data::Dumper::Sortkeys</span> =<span class="n">1</span> <span class="sc">;</span>
  13 <span class="k">print</span> <span class="i">Data::Dumper::Dumper</span> \<span class="i">%p</span><span class="sc">;</span>
</pre>
<h2>SEE ALSO</h2>
<a href="http://search.cpan.org/search?module=CGI::Simple">CGI::Simple</a> for a middle ground between <tt>CGI</tt> and <tt>::Minimal</tt>.

<h2>FOOTNOTES</h2>
<p><a name="1">1</a>. No templating system is used as it was felt doing so would be overkill and beyond the scope of the example.
</body>
</html>
